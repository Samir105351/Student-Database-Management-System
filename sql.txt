create table depertment(
dept_name varchar(8) PRIMARY KEY NOT NULL,
dept_abv varchar(100),
dept_location varchar(60)
);

create table student(
STUDENT_ID NUMBER(9) not null,
STUDENT_NAME VARCHAR2(40),
STUDENT_TYPE VARCHAR2(40) CHECK (STUDENT_TYPE IN ('REGULAR','IRREGULAR')),
STUDENT_DEPT VARCHAR2(8),
STUDENT_GENDER VARCHAR2(20)
CHECK (STUDENT_GENDER IN ('MALE','FEMALE')),
PRIMARY KEY(STUDENT_ID),
FOREIGN KEY (STUDENT_DEPT)REFERENCES depertment(dept_name)
on delete set null,
STUDENT_EMAIL VARCHAR2(40),
STUDENT_PHONE VARCHAR2(40),
STUDENT_FATHER VARCHAR2(40),
STUDENT_MOTHER VARCHAR2(40),
STUDENT_BIRTH DATE,
STUDENT_TERM VARCHAR2(8) CHECK (STUDENT_TERM IN ('FALL','SPRING')),
STUDENT_LEVEL NUMBER(2)CHECK (STUDENT_LEVEL IN ('1','2','3','4')),
SSC_BOARD VARCHAR2(20) CHECK (SSC_BOARD IN ('DHAKA','KHULNA','RAJSHAHI','BARISHAL','CHITAGONG','SYLHET','RANGPUR','KUMILLA')),
SSC_RESULT NUMERIC(8,4),
SSC_YEAR NUMBER(4),
HSC_BOARD VARCHAR2(20) CHECK (HSC_BOARD IN ('DHAKA','KHULNA','RAJSHAHI','BARISHAL','CHITAGONG','SYLHET','RANGPUR','KUMILLA')),
HSC_RESULT NUMERIC(8,4),
HSC_YEAR NUMBER(4),
STUDENT_PRESENTAD VARCHAR2(80),
STUDENT_PERMANANT VARCHAR2(80),
STUDENT_PASSWORD VARCHAR2(80) NOT NULL,
STUDENT_BACKUP VARCHAR2(80) NOT NULL,
STUDENT_RELIGION VARCHAR2(40),
STUDENT_NATIONALITY VARCHAR2(50)
);  

create table faculty(
FACULTY_ID NUMBER(9) not null,
FACULTY_NAME VARCHAR2(40),
FACULTY_TYPE VARCHAR2(40) CHECK (FACULTY_TYPE IN ('PERMANANT','GUEST')),
FACULTY_DEPT VARCHAR2(8),
FACULTY_GENDER VARCHAR2(20)
CHECK (FACULTY_GENDER IN ('MALE','FEMALE')),
PRIMARY KEY(FACULTY_ID),
FOREIGN KEY (FACULTY_DEPT)REFERENCES depertment(dept_name)
on delete set null,
FACULTY_EMAIL VARCHAR2(40),
FACULTY_PHONE VARCHAR2(40),
FACULTY_FATHER VARCHAR2(40),
FACULTY_MOTHER VARCHAR2(40),
FACULTY_BIRTH DATE,
FACULTY_PRESENTAD VARCHAR2(80),
FACULTY_PERMANANT VARCHAR2(80),
FACULTY_PASSWORD VARCHAR2(80) NOT NULL,
FACULTY_BACKUP VARCHAR2(80) NOT NULL,
FACULTY_RELIGION VARCHAR2(40),
FACULTY_NATIONALITY VARCHAR2(50)
);  
CREATE TABLE COURSE(
COURSE_CODE VARCHAR2(10),
COURSE_NAME VARCHAR2(100),
COURSE_DEPT VARCHAR2(8),
PRE_COURSE_CODE VARCHAR2(10),
PRIMARY KEY(COURSE_CODE),
FOREIGN KEY (COURSE_DEPT)REFERENCES depertment(dept_name)
on delete set null,
FOREIGN KEY (PRE_COURSE_CODE)REFERENCES COURSE(COURSE_CODE)
on delete set null,
COURSE_TERM VARCHAR2(8) CHECK (COURSE_TERM IN ('FALL','SPRING')),
COURSE_LEVEL NUMBER(2)CHECK (COURSE_LEVEL IN ('1','2','3','4')),
COURSE_CREDIT NUMERIC(8,4),
COURSE_COST NUMERIC(30,4)
);
create table payment(
PAYMENT_ID NUMBER(9) not null,
PAYMENT_TYPE VARCHAR2(40) CHECK (PAYMENT_TYPE IN ('CASH','CHECK','CREDITCARD','ONLINE')),
PRIMARY KEY(PAYMENT_ID),
PAYMENT_DATE DATE
);  

CREATE TABLE PAYS(
PAYS_PAYMENT_ID NUMBER(9) NOT NULL,
PAYS_STUDENT_ID NUMBER(9) NOT NULL,
PAYS_COURSE_CODE VARCHAR2(10),
FOREIGN KEY (PAYS_PAYMENT_ID) REFERENCES payment(PAYMENT_ID) on delete set null,
FOREIGN KEY (PAYS_STUDENT_ID) REFERENCES student(STUDENT_ID) on delete set null,
FOREIGN KEY (PAYS_COURSE_CODE) REFERENCES COURSE(COURSE_CODE) on delete set null,
PAYS_AMOUNT NUMERIC(30,20),
PAYS_STATUS VARCHAR2(40) CHECK (PAYS_STATUS IN ('PAID','NOT PAID'))
);
CREATE TABLE ENROLL(
E_COURSE_CODE VARCHAR2(10),
E_STUDENT_ID NUMBER(9) not null,
FOREIGN KEY (E_COURSE_CODE) REFERENCES course(COURSE_CODE) on delete set null,
FOREIGN KEY (E_STUDENT_ID) REFERENCES student(STUDENT_ID) on delete set null
);
CREATE TABLE CLASS(
CLASS_NO NUMBER(9) NOT NULL,
CLASS_COURSE_CODE VARCHAR2(10),
CLASS_TERM VARCHAR2(8) CHECK (CLASS_TERM IN ('FALL','SPRING')),
CLASS_LEVEL NUMBER(2) CHECK (CLASS_LEVEL IN ('1','2','3','4')),
CLASS_TIME VARCHAR2(50),
CLASS_DURATION VARCHAR2(50),
CLASS_DATE DATE,
PRIMARY KEY(CLASS_NO),
FOREIGN KEY(CLASS_COURSE_CODE) REFERENCES course(COURSE_CODE) on delete set null
);
CREATE TABLE ATTEND(
C_CLASS_NO NUMBER(9) NOT NULL,
C_STUDENT_ID NUMBER(9) not null,
FOREIGN KEY (C_CLASS_NO) REFERENCES CLASS(CLASS_NO) on delete set null,
FOREIGN KEY (C_STUDENT_ID) REFERENCES student(STUDENT_ID) on delete set null,
C_ATTEND VARCHAR2(40) CHECK (C_ATTEND IN ('PRESENT','ABSENT'))
);
CREATE TABLE TAKES(
T_CLASS_NO NUMBER(9),
T_FACULTY_ID NUMBER(9) not null,
FOREIGN KEY (T_CLASS_NO) REFERENCES CLASS(CLASS_NO) on delete set null,
FOREIGN KEY (T_FACULTY_ID ) REFERENCES FACULTY(FACULTY_ID) on delete set null
);


INSERT INTO depertment VALUES ('CSE','COMPUTER SCIENCE AND ENGINEERING','9TH FLOOR,B BUILDING,MIST');
INSERT INTO depertment VALUES ('EECE','ELECTRICAL,ELECTRONICS AND TELECOMMUNICATION ENGINEERING','1ST FLOOR,B BUILDING,MIST');
INSERT INTO depertment VALUES ('PME','PETROL AND MINING ENGINEERING','3RD FLOOR,B BUILDING,MIST');
INSERT INTO depertment VALUES ('BME','BIOMEDICAL ENGINEERING','5TH FLOOR,A BUILDING,MIST');
INSERT INTO depertment VALUES ('NAME','NAVAL ARCHITECTURE AND MARINE ENGINEERING','7TH FLOOR,C BUILDING,MIST');
INSERT INTO depertment VALUES ('AE','AERONAUTICAL ENGINEERING','1ST FLOOR,B BUILDING,MIST');
INSERT INTO depertment VALUES ('CE','CIVIL ENGINEERING','4TH FLOOR,A BUILDING,MIST');
INSERT INTO depertment VALUES ('ME','MECHANICAL ENGINEERING','9TH FLOOR,A BUILDING,MIST');
INSERT INTO depertment VALUES ('EWCE','ENVIRONMENT,WATER AND RESOURCE MANAGEMENT ENGINEERING','4TH FLOOR,B BUILDING,MIST');
INSERT INTO depertment VALUES ('ARCH','ARCHITECTURE','4TH FLOOR,B BUILDING,MIST');
INSERT INTO depertment VALUES ('NSE','NUCLEAR SCIENCE AND ENGINEERING','11TH FLOOR,B BUILDING,MIST');

insert into course VALUES('CSE-100','INTRODUCTION TO COMOUTERS','CSE',NULL,'FALL','1','1.50',100);
insert into course VALUES('CSE-101','DISCRETE MATH','CSE',NULL,'FALL','1','3.00',100);
insert into course VALUES('CSE-105','STRUCTURED PROGRAMMING LANGUAGE','CSE',NULL,'FALL','1','1.50',100);
insert into course VALUES('CSE-106','STRUCTURED PROGRAMMING LANGUAGE SESSIONAL','CSE',NULL,'FALL','1','3.00',100);
insert into course VALUES('CSE-201','DIGITAL LOGIC DESIGN','CSE',NULL,'SPRING','1','1.50',200);
insert into course VALUES('CSE-202','DIGITAL LOGIC DESIGN SESSIONAL','CSE',NULL,'SPRING','1','3.00',100);
insert into course VALUES('CSE-203','DATA STRUCTURE AND ALGORITHM','CSE',NULL,'SPRING','1','1.50',200);
insert into course VALUES('CSE-205','OBJECT ORIENTED PROGRAMMING','CSE',NULL,'SPRING','1','3.00',300);

INSERT INTO CLASS VALUES ('1','CSE-100','FALL','1','8:00-9:00','1 HR','11-JAN-2022');
INSERT INTO CLASS VALUES ('2','CSE-101','FALL','1','9:00-10:00','1 HR','11-JAN-2022');
INSERT INTO CLASS VALUES ('3','CSE-105','FALL','1','10:00-11:00','1 HR','11-JAN-2022');
INSERT INTO CLASS VALUES ('4','CSE-106','FALL','1','11:00-12:00','1 HR','11-JAN-2022');
INSERT INTO CLASS VALUES ('5','CSE-100','FALL','1','8:00-9:00','1 HR','12-JAN-2022');
INSERT INTO CLASS VALUES ('6','CSE-101','FALL','1','9:00-10:00','1 HR','12-JAN-2022');
INSERT INTO CLASS VALUES ('7','CSE-105','FALL','1','10:00-11:00','1 HR','12-JAN-2022');
INSERT INTO CLASS VALUES ('8','CSE-106','FALL','1','11:00-12:00','1 HR','12-JAN-2022');
INSERT INTO CLASS VALUES ('9','CSE-201','SPRING','1','8:00-9:00','1 HR','13-JAN-2022');
INSERT INTO CLASS VALUES ('10','CSE-202','SPRING','1','9:00-10:00','1 HR','13-JAN-2022');
INSERT INTO CLASS VALUES ('11','CSE-203','SPRING','1','10:00-11:00','1 HR','13-JAN-2022');
INSERT INTO CLASS VALUES ('12','CSE-205','SPRING','1','11:00-12:00','1 HR','13-JAN-2022');
INSERT INTO CLASS VALUES ('13','CSE-201','SPRING','1','8:00-9:00','1 HR','14-JAN-2022');
INSERT INTO CLASS VALUES ('14','CSE-202','SPRING','1','9:00-10:00','1 HR','14-JAN-2022');
INSERT INTO CLASS VALUES ('15','CSE-203','SPRING','1','10:00-11:00','1 HR','14-JAN-2022');
INSERT INTO CLASS VALUES ('16','CSE-205','SPRING','1','11:00-12:00','1 HR','14-JAN-2022');

INSERT INTO TAKES VALUES('1','100120121');
INSERT INTO TAKES VALUES('2','100120121');
INSERT INTO TAKES VALUES('3','100120121');
INSERT INTO TAKES VALUES('4','100120121');
INSERT INTO TAKES VALUES('5','100120121');
INSERT INTO TAKES VALUES('6','100120121');
INSERT INTO TAKES VALUES('7','100120121');
INSERT INTO TAKES VALUES('8','100120121');
INSERT INTO TAKES VALUES('9','100120121');
INSERT INTO TAKES VALUES('10','100120121');
INSERT INTO TAKES VALUES('11','100120120');
INSERT INTO TAKES VALUES('12','100120120');
INSERT INTO TAKES VALUES('13','100120120');
INSERT INTO TAKES VALUES('14','100120120');
INSERT INTO TAKES VALUES('15','100120120');
INSERT INTO TAKES VALUES('16','100120120');


---PROCEDURE 
CREATE OR REPLACE Procedure ADDENROLL( S_ID IN NUMBER)
AS
BEGIN
DECLARE 
CURSOR COURSE_DATA(ST_ID IN NUMBER) IS
SELECT COURSE_CODE FROM COURSE 
WHERE COURSE_TERM=(SELECT STUDENT_TERM FROM student WHERE STUDENT_ID=ST_ID) 
AND COURSE_LEVEL=(SELECT STUDENT_LEVEL FROM student WHERE STUDENT_ID=ST_ID) 
AND COURSE_DEPT=(SELECT STUDENT_DEPT FROM student WHERE STUDENT_ID=ST_ID);

COURSE_ROW COURSE_DATA%ROWTYPE;

BEGIN
OPEN COURSE_DATA(S_ID);
LOOP
FETCH COURSE_DATA INTO COURSE_ROW;
EXIT WHEN COURSE_DATA%NOTFOUND;
INSERT INTO ENROLL VALUES(COURSE_ROW.COURSE_CODE,S_ID);
END LOOP;
CLOSE COURSE_DATA;
END;
END;



---PROCEDURE 
CREATE OR REPLACE Procedure DeleteaAllStu
AS
BEGIN
DECLARE 


CURSOR STUDENT_DATA IS
SELECT STUDENT_ID FROM STUDENT;


STUDENT_ROW STUDENT_DATA%ROWTYPE;

BEGIN
OPEN STUDENT_DATA;
LOOP
FETCH STUDENT_DATA INTO STUDENT_ROW;
EXIT WHEN STUDENT_DATA%NOTFOUND;
DELETE FROM ATTEND WHERE C_STUDENT_ID=STUDENT_ROW.STUDENT_ID;
DELETE FROM PAYS WHERE PAYS_STUDENT_ID=STUDENT_ROW.STUDENT_ID;
DELETE FROM ENROLL WHERE E_STUDENT_ID=STUDENT_ROW.STUDENT_ID;
DELETE FROM STUDENT WHERE STUDENT_ID=STUDENT_ROW.STUDENT_ID;
END LOOP;
CLOSE STUDENT_DATA;
END;
END;



---PROCEDURE
create or replace procedure deletestu(s_id in number)
as
begin
DELETE FROM ATTEND WHERE C_STUDENT_ID=s_id;
DELETE FROM PAYS where PAYS_STUDENT_ID=s_id;
DELETE FROM ENROLL where E_STUDENT_ID=s_id;
DELETE FROM student where STUDENT_ID=s_id;
end;




---PROCEDURE
create or replace procedure deletefac(f_id in number)
as
begin
DELETE FROM TAKES WHERE T_FACULTY_ID=f_id;
DELETE FROM FACULTY where FACULTY_ID=f_id;
end;



---PROCEDURE
CREATE OR REPLACE Procedure DeleteaAllfac
AS
BEGIN
DECLARE 


CURSOR FACULTY_DATA IS
SELECT FACULTY_ID FROM FACULTY;


FACULTY_ROW FACULTY_DATA%ROWTYPE;

BEGIN
OPEN FACULTY_DATA;
LOOP
FETCH FACULTY_DATA INTO FACULTY_ROW;
EXIT WHEN FACULTY_DATA%NOTFOUND;
DELETE FROM TAKES WHERE T_FACULTY_ID=FACULTY_ROW.FACULTY_ID;
DELETE FROM FACULTY where FACULTY_ID=FACULTY_ROW.FACULTY_ID;
END LOOP;
CLOSE FACULTY_DATA;
END;
END;